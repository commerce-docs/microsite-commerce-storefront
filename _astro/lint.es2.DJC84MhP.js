import{C as g}from"./codemirror.es.DhNp89ap.js";import{s as w,N as C,E as S,v as E,K as b,p as I,a as Q,G as D,b as G,C as L,o as N}from"./GraphiQLEditor.h-EeZlAI.js";import{R,P as p}from"./Range.CZNrBk8u.js";import"./codemirror.es2.CXusOVRv.js";import"./index.BGCt5l70.js";function P(t,a,o,c,r){const e=w.filter(n=>!(n===C||n===S));return o&&Array.prototype.push.apply(e,o),E(t,a,e).filter(n=>{if(n.message.includes("Unknown directive")&&n.nodes){const s=n.nodes[0];if(s&&s.kind===b.DIRECTIVE){const l=s.name.value;if(l==="arguments"||l==="argumentDefinitions")return!1}}return!0})}const d={Error:"Error",Warning:"Warning",Information:"Information",Hint:"Hint"},h={[d.Error]:1,[d.Warning]:2,[d.Information]:3,[d.Hint]:4},f=(t,a)=>{if(!t)throw new Error(a)};function T(t,a=null,o,c,r){var e,i;let n=null,s="";r&&(s=typeof r=="string"?r:r.reduce((u,m)=>u+I(m)+`

`,""));const l=s?`${t}

${s}`:t;try{n=Q(l)}catch(u){if(u instanceof D){const m=k((i=(e=u.locations)===null||e===void 0?void 0:e[0])!==null&&i!==void 0?i:{line:0,column:0},l);return[{severity:h.Error,message:u.message,source:"GraphQL: Syntax",range:m}]}throw u}return V(n,a,o)}function V(t,a=null,o,c){if(!a)return[];const r=P(a,t,o).flatMap(i=>v(i,h.Error,"Validation")),e=E(a,t,[G]).flatMap(i=>v(i,h.Warning,"Deprecation"));return r.concat(e)}function v(t,a,o){if(!t.nodes)return[];const c=[];for(const[r,e]of t.nodes.entries()){const i=e.kind!=="Variable"&&"name"in e&&e.name!==void 0?e.name:"variable"in e&&e.variable!==void 0?e.variable:e;if(i){f(t.locations,"GraphQL validation error requires locations.");const n=t.locations[r],s=M(i),l=n.column+(s.end-s.start);c.push({source:`GraphQL: ${o}`,message:t.message,severity:a,range:new R(new p(n.line-1,n.column-1),new p(n.line-1,l))})}}return c}function k(t,a){const o=N(),c=o.startState(),r=a.split(`
`);f(r.length>=t.line,"Query text must have more lines than where the error happened");let e=null;for(let l=0;l<t.line;l++)for(e=new L(r[l]);!e.eol()&&o.token(e,c)!=="invalidchar";);f(e,"Expected Parser stream to be available.");const i=t.line-1,n=e.getStartOfToken(),s=e.getCurrentPosition();return new R(new p(i,n),new p(i,s))}function M(t){const o=t.loc;return f(o,"Expected ASTNode to have a location."),o}const y=["error","warning","information","hint"],W={"GraphQL: Validation":"validation","GraphQL: Deprecation":"deprecation","GraphQL: Syntax":"syntax"};g.registerHelper("lint","graphql",(t,a)=>{const{schema:o,validationRules:c,externalFragments:r}=a;return T(t,o,c,void 0,r).map(n=>({message:n.message,severity:n.severity?y[n.severity-1]:y[0],type:n.source?W[n.source]:void 0,from:g.Pos(n.range.start.line,n.range.start.character),to:g.Pos(n.range.end.line,n.range.end.character)}))});
