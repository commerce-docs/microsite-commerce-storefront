import{C as g}from"./codemirror.es.B24Fd7BT.js";import{s as R,N as C,E as b,v as E,K as Q,p as S,a as D,G,b as I,C as L,o as N}from"./GraphiQLEditor.C_1sGSAO.js";import{R as w,P as p}from"./Range.CZNrBk8u.js";import"./codemirror.es2.D1PI0zxW.js";import"./index.BI4qozxO.js";function P(e,t,a,c,o){const n=R.filter(r=>!(r===C||r===b));return a&&Array.prototype.push.apply(n,a),E(e,t,n).filter(r=>{if(r.message.includes("Unknown directive")&&r.nodes){const s=r.nodes[0];if(s&&s.kind===Q.DIRECTIVE){const l=s.name.value;if(l==="arguments"||l==="argumentDefinitions")return!1}}return!0})}const d={Error:"Error",Warning:"Warning",Information:"Information",Hint:"Hint"},h={[d.Error]:1,[d.Warning]:2,[d.Information]:3,[d.Hint]:4},f=(e,t)=>{if(!e)throw new Error(t)};function k(e,t=null,a,c,o){var n,i;let r=null,s="";o&&(s=typeof o=="string"?o:o.reduce((u,m)=>u+S(m)+`

`,""));const l=s?`${e}

${s}`:e;try{r=D(l)}catch(u){if(u instanceof G){const m=V((i=(n=u.locations)===null||n===void 0?void 0:n[0])!==null&&i!==void 0?i:{line:0,column:0},l);return[{severity:h.Error,message:u.message,source:"GraphQL: Syntax",range:m}]}throw u}return T(r,t,a)}function T(e,t=null,a,c){if(!t)return[];const o=P(t,e,a).flatMap(i=>v(i,h.Error,"Validation")),n=E(t,e,[I]).flatMap(i=>v(i,h.Warning,"Deprecation"));return o.concat(n)}function v(e,t,a){if(!e.nodes)return[];const c=[];for(const[o,n]of e.nodes.entries()){const i=n.kind!=="Variable"&&"name"in n&&n.name!==void 0?n.name:"variable"in n&&n.variable!==void 0?n.variable:n;if(i){f(e.locations,"GraphQL validation error requires locations.");const r=e.locations[o],s=W(i),l=r.column+(s.end-s.start);c.push({source:`GraphQL: ${a}`,message:e.message,severity:t,range:new w(new p(r.line-1,r.column-1),new p(r.line-1,l))})}}return c}function V(e,t){const a=N(),c=a.startState(),o=t.split(`
`);f(o.length>=e.line,"Query text must have more lines than where the error happened");let n=null;for(let l=0;l<e.line;l++)for(n=new L(o[l]);!n.eol()&&a.token(n,c)!=="invalidchar";);f(n,"Expected Parser stream to be available.");const i=e.line-1,r=n.getStartOfToken(),s=n.getCurrentPosition();return new w(new p(i,r),new p(i,s))}function W(e){const a=e.loc;return f(a,"Expected ASTNode to have a location."),a}const y=["error","warning","information","hint"],x={"GraphQL: Validation":"validation","GraphQL: Deprecation":"deprecation","GraphQL: Syntax":"syntax"};g.registerHelper("lint","graphql",(e,t)=>{const{schema:a,validationRules:c,externalFragments:o}=t;return k(e,a,c,void 0,o).map(n=>({message:n.message,severity:n.severity?y[n.severity-1]:y[0],type:n.source?x[n.source]:void 0,from:g.Pos(n.range.start.line,n.range.start.character),to:g.Pos(n.range.end.line,n.range.end.character)}))});
